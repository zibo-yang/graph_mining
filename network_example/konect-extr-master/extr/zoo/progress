#! /usr/bin/perl -w
#
# Monitor extraction progress
#

use strict;

use File::Basename;

my $ZOO= $ENV{'ZOO'} || "$ENV{'HOME'}/zoodir";
my $TMP_BASE= ($ENV{'TMP'} || "/tmp") . "/" . basename($0);

open(ANALYSIS, "<$ZOO/analysis") or die "Cannot open $ZOO/analysis:  $!";
open DATA, ">$TMP_BASE.data" or die "Opening data:  $!"; 

my $min_2=999999; my $max_2=0;
my $min_3=999999; my $max_3=0;
my $min_4=999999; my $max_4=0;
my $min_5=999999; my $max_5=0;
my $min_6=999999; my $max_6=0;

my $prev_2= undef;
my $prev_4= undef; 


while (<ANALYSIS>) {

    s,6h,,;
    s,[^0-9 ],,g;

    /([0-9]+) +([0-9]+) +([0-9]+) +([0-9]+) +([0-9]+) +([0-9]+)/;

    # Some data in the file is broken
    next if (defined($prev_2) &&  $2  <  $prev_2);  $prev_2= $2;
    next if (defined($prev_4) &&  $4  <  $prev_4);  $prev_4= $4;

    print DATA "$_\n";

    $2 < $min_2 and $min_2= $2;  $2 > $max_2 and $max_2= $2;
    $3 < $min_3 and $min_3= $3;  $3 > $max_3 and $max_3= $3;
    $4 < $min_4 and $min_4= $4;  $4 > $max_4 and $max_4= $4;
    $5 < $min_5 and $min_5= $5;  $5 > $max_5 and $max_5= $5;
    $6 < $min_6 and $min_6= $6;  $6 > $max_6 and $max_6= $6;
}

close(ANALYSIS) or die "Closing analysis:  $!"; 
close(DATA) or die "Closing data:  $!"; 

print "Min max: $min_2 $max_2, $min_3 $max_3, $min_4 $max_4, $min_5 $max_5, $min_6 $max_6\n";

open(GNUPLOT, "|gnuplot") or die "Running Gnuplot:  $!";

my $input= <<EOF;

set terminal postscript eps enhanced color
set output "progress.eps"

set key left top

set yrange [0:1]

plot \\
 "$TMP_BASE.data" using 1:((\$2 - $min_2.) / ($max_2. - $min_2)) title "user count ($min_2 - $max_2)" with lines lw 2, \\
 "$TMP_BASE.data" using 1:((\$3 - $min_3.) / ($max_3. - $min_3)) title "user queue ($min_3 - $max_3)" with lines lw 2, \\
 "$TMP_BASE.data" using 1:((\$4 - $min_4.) / ($max_4. - $min_4)) title "link count ($min_4 - $max_4)" with lines lw 2, \\
 "$TMP_BASE.data" using 1:((\$5 - $min_5.) / ($max_5. - $min_5)) title "speed ($min_5 - $max_5)"      with lines lw 2, \\
 "$TMP_BASE.data" using 1:((\$6 - $min_6.) / ($max_6. - $min_6)) title "progress ($min_6 - $max_6)"   with lines lw 2

set output "progress2.eps"

plot \\
 "$TMP_BASE.data" using 2:((\$2 - $min_2.) / ($max_2. - $min_2)) title "user count ($min_2 - $max_2)" with lines lw 2, \\
 "$TMP_BASE.data" using 2:((\$3 - $min_3.) / ($max_3. - $min_3)) title "user queue ($min_3 - $max_3)" with lines lw 2, \\
 "$TMP_BASE.data" using 2:((\$4 - $min_4.) / ($max_4. - $min_4)) title "link count ($min_4 - $max_4)" with lines lw 2, \\
 "$TMP_BASE.data" using 2:((\$5 - $min_5.) / ($max_5. - $min_5)) title "speed ($min_5 - $max_5)"      with lines lw 2, \\
 "$TMP_BASE.data" using 2:((\$6 - $min_6.) / ($max_6. - $min_6)) title "progress ($min_6 - $max_6)"   with lines lw 2

EOF

print GNUPLOT $input; 

close(GNUPLOT) or die "Writing to Gnuplot:  $!";
